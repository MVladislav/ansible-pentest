---
# tasks file for ansible-pentest

# ------------------------------------------------------------------------------
- name: "PENTEST | burpsuit | install and setup"
  tags:
    - pentest
    - burpsuit
  block:
    # note: for Professional rename 'community' with 'pro'
    # `wget "https://portswigger.net/burp/releases/download?product=community&type=linux&version=$(curl 'https://portswigger.net/burp/releases/data?lastId=-1&pageSize=20' | jq -r '[.ResultSet | .Results | .[] | select(.releaseChannels | contains(["Stable"])) | .builds | .[] | select(.ProductId == "community" and .ProductPlatform == "Linux")] | first | .Version')"`
    # ------------------------------------------------------------------------------
    # INSTALL BURPSUIT
    - name: "PENTEST | burpsuit | retrieve data from PortSwigger releases API"
      ansible.builtin.set_fact:
        pentest_burp_release_data: "{{ lookup('url', 'https://portswigger.net/burp/releases/data?lastId=-1&pageSize=20') }}"

    - name: "PENTEST | burpsuit | get latest release"
      ansible.builtin.set_fact:
        pentest_burp_latest_release: "{{ pentest_burp_release_data | community.general.json_query(latest_release_query) }}"
      vars:
        latest_release_query: >-
          ResultSet.Results[?contains(@.releaseChannels, '{{ pentest_burpsuite_channel }}')].builds[]
          | [?ProductId == '{{ pentest_burpsuite_edition }}' && ProductPlatform == 'Linux']
          | [0]

    - name: "PENTEST | burpsuit | set release facts"
      ansible.builtin.set_fact:
        pentest_burpsuite_installer_version: "{{ pentest_burp_latest_release | community.general.json_query('@.Version') }}"
        pentest_burpsuite_installer_sha256_checksum: "{{ pentest_burp_latest_release | community.general.json_query('@.Sha256Checksum') }}"

    - name: "PENTEST | burpsuit | set installer script filename"
      ansible.builtin.set_fact:
        pentest_burpsuite_installer_script: >-
          burpsuite_{{ pentest_burpsuite_edition }}_linux_v{{ pentest_burpsuite_installer_version | regex_replace('\\.', '_') }}.sh

    # ------------------------------------------------------------------------------
    - name: "PENTEST | burpsuit | download BurpSuite installer"
      ansible.builtin.get_url:
        url: >-
          https://portswigger.net/burp/releases/download?product={{ pentest_burpsuite_edition }}&type=linux&version={{ pentest_burpsuite_installer_version }}
        dest: "/var/tmp/{{ pentest_burpsuite_installer_script }}"
        checksum: "sha256:{{ pentest_burpsuite_installer_sha256_checksum }}"
        owner: "{{ outer_item }}"
        group: "{{ outer_item }}"
        mode: "0640"

    - name: "PENTEST | burpsuit | create response.varfile for unattended install"
      become: true
      become_user: "{{ outer_item }}"
      ansible.builtin.template:
        src: burpsuite_response.varfile.j2
        dest: /var/tmp/burpsuite_response.varfile
        owner: "{{ outer_item }}"
        group: "{{ outer_item }}"
        mode: "0640"

    # ------------------------------------------------------------------------------
    - name: "PENTEST | burpsuit | install BurpSuite"
      become: true
      become_user: "{{ outer_item }}"
      ansible.builtin.command:
        cmd: "/bin/sh {{ pentest_burpsuite_installer_script }} -q -varfile burpsuite_response.varfile -overwrite"
        chdir: /var/tmp
      register: burpsuit_installed
      changed_when: false
      failed_when: burpsuit_installed.rc != 0

    # ------------------------------------------------------------------------------
    - name: "PENTEST | burpsuit | clean-up"
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "/var/tmp/{{ pentest_burpsuite_installer_script }}"
        - /var/tmp/burpsuite_response.varfile

    # ------------------------------------------------------------------------------
    # SETUP CERT
    - name: "PENTEST | burpsuit | check if cert exists"
      ansible.builtin.stat:
        path: /usr/local/share/ca-certificates/BurpSuiteCA.der
      register: pentest_burpsuite_cert

    - name: "PENTEST | burpsuit | generate new CA Certificate"
      ansible.builtin.shell: >
        set -o pipefail &&
        timeout 45 '{{ ansible_env.HOME }}/BurpSuite{{ pentest_burpsuite_edition | capitalize }}/jre/bin/java' \
        -Djava.awt.headless=true \
        -jar '{{ ansible_env.HOME }}/BurpSuite{{ pentest_burpsuite_edition | capitalize }}/burpsuite_community.jar' < <(echo y) > /dev/null 2>&1 &
      args:
        executable: /bin/bash
      async: 45
      poll: 0
      changed_when: false
      when: not pentest_burpsuite_cert.stat.exists

    - name: "PENTEST | burpsuit | wait for 10 seconds startup"
      ansible.builtin.wait_for:
        timeout: 10
        delay: 0
        msg: "Delaying before starting the next task"
      when: not pentest_burpsuite_cert.stat.exists

    - name: "PENTEST | burpsuit | download new CA Certificate"
      become: true
      ansible.builtin.get_url:
        url: http://localhost:8080/cert
        dest: /usr/local/share/ca-certificates/BurpSuiteCA.der
        owner: root
        group: root
        mode: "0644"
      when: not pentest_burpsuite_cert.stat.exists

    # ------------------------------------------------------------------------------
    - name: "PENTEST | burpsuit | create directory for Burp Suite extras"
      become: true
      become_user: "{{ outer_item }}"
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.BurpSuiteExtras"
        state: directory
        mode: "0755"

    - name: "PENTEST | burpsuit | download jar files"
      become: true
      become_user: "{{ outer_item }}"
      ansible.builtin.get_url:
        url: "{{ item.value.url }}"
        dest: "{{ ansible_env.HOME }}/.BurpSuiteExtras/{{ item.value.jar }}"
        checksum: "{{ item.value.checksum }}"
        mode: "0644"
      loop: "{{ lookup('dict', pentest_burpsuite_extras_jars) }}"

    - name: "PENTEST | burpsuit | copy BurpSuite Community Config"
      become: true
      become_user: "{{ outer_item }}"
      ansible.builtin.template:
        src: UserConfigCommunity.json.j2
        dest: "{{ ansible_env.HOME }}/.BurpSuite/UserConfigCommunity.json"
        owner: "{{ outer_item }}"
        group: "{{ outer_item }}"
        mode: "0600"
